version: "3.9"

services:
  db:
    image: postgis/postgis:16-3.4
    container_name: echo_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-echo}
      POSTGRES_USER: ${POSTGRES_USER:-echo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-echo_password}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-echo}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: echo_redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: echo_backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://echo:echo_password@db:5432/echo}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - APP_NAME=${APP_NAME:-ECHO Backend}
      - ENV=${ENV:-development}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

networks:
  default:
    name: echo_network

